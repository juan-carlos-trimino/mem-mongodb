FROM mongo:5-focal

# Due to the tightened security restrictions of OpenShift, containers that run on Docker and K8s
# might not run successfully on OpenShift without modification. In Docker and K8s, containers are
# run either as the user specified by the USER directive in the Dockerfile, or as the root user if
# a USER directive is not specified. Containerized applications designed to run as the root user
# might not run as expected on OpenShift.
#
# In contrast, OpenShift runs containers using an arbitrarily assigned user ID, and the group ID
# must always be set to the root group (0). Hence, directories and files that the processes running
# in the image need to access should have their group ownership set to the root group; they also
# need to be read/writable by that group. Furthermore, because OpenShift assigns an arbitrary user
# ID and a group ID of zero (0), SecurityContext directives, such as runAsUser and runAsGroup, must
# not appear in the deployment specifications when running on OpenShift. Enabling SecurityContext
# directives causes the deployment to fail.
#
# InitContainers
# When running in K8s, initContainers are sometimes used to set the permissions of files and
# directories used by other containers in the pod. This technique relies on K8s running
# initContainers as the root user and running other containers as the user specified in the Docker
# directive USER. But when running in OpenShift, both initContainers and regular containers use the
# OpenShift-assigned user ID. Therefore, the permissions in initContainers are the same as the
# permissions in regular containers running in the same pod.
#   docker-entrypoint.sh \
RUN chgrp -R 0 /usr/local/bin && \
    chmod -R g=u /usr/local/bin && \
    # \
    mkdir -p /mongodb/log && \
    chgrp -R 0 /mongodb && \
    chmod -R g=u /mongodb && \
    # mongod \
    chgrp -R 0 /usr/bin && \
    chmod -R g=u /usr/bin

USER 1001

EXPOSE 27017
